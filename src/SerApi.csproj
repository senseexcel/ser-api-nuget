<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--net45 is only for TypeScript Generation-->
    <TargetFrameworks>netcoreapp2.0;netcoreapp2.1;net452;net462;net45</TargetFrameworks>    
    <RootNamespace>Ser.Api</RootNamespace>
    <Authors>Konrad Mattheis und Martin Berthold</Authors>    
    <Copyright>Copyright (c) 2018</Copyright>
    <Company>senseexcel</Company>
    <PackageId>SerApi</PackageId>
    <Product>SerApi</Product>
    <Version>$(GitVersion_NuGetVersion)</Version>
    <GenerateAssemblyFileVersionAttribute>false</GenerateAssemblyFileVersionAttribute>
    <GenerateAssemblyInformationalVersionAttribute>false</GenerateAssemblyInformationalVersionAttribute>
    <GenerateAssemblyVersionAttribute>false</GenerateAssemblyVersionAttribute>    
  </PropertyGroup>

  <Choose>
    <When Condition="'$(Configuration)' == 'Release'">
      <PropertyGroup>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <Choose>
    <When Condition="'$(TargetFramework)' == 'net45'">
      <PropertyGroup>
        <GeneratePackageOnBuild>false</GeneratePackageOnBuild>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>      
        <RtTargetFile>$(ProjectDir)bin\$(Configuration)\npm\index.ts</RtTargetFile>
        <RtDisable>false</RtDisable>        
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <RtDisable>true</RtDisable>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <Target Name="PublishToNugetWithAPIKey" AfterTargets="GenerateNuspec">   
    <ReadLinesFromFile File="$(SolutionDir)\..\..\nugetapikey.txt">
      <Output TaskParameter="Lines" PropertyName="NugetAPIKey" />
    </ReadLinesFromFile>
    <Exec WorkingDirectory="$(BaseDir)" Command="dotnet nuget push $(PackageOutputAbsolutePath)$(PackageId).$(PackageVersion).nupkg -k $(NugetAPIKey) -s https://api.nuget.org/v3/index.json" />
  </Target>

  <Target Name="PublishNPM" AfterTargets="PublishToNugetWithAPIKey">
    <CreateProperty Value="@(PackageReference-&gt;Metadata('Version'))">
      <Output PropertyName="tsc_Version" Condition="'%(PackageReference.Identity)' == 'Microsoft.TypeScript.MSBuild'" TaskParameter="Value" />
    </CreateProperty>

    <Exec WorkingDirectory="$(SolutionDir)bin\$(Configuration)\npm\" Command="$(NuGetPackageRoot)Microsoft.TypeScript.MSBuild\$(tsc_Version)\tools\tsc\tsc.exe index.ts -d" />
    <Delete Files="$(SolutionDir)bin\$(Configuration)\npm\index.ts" />

    <ReadLinesFromFile File="$(SolutionDir)\Helper\package.json">
      <Output TaskParameter="Lines" PropertyName="PackageJSON" />
    </ReadLinesFromFile>
    
    <ItemGroup>
      <PackageJSONGroup Include="$(PackageJSON)" />
    </ItemGroup>
    
    <WriteLinesToFile File="$(PackageOutputAbsolutePath)npm\package.json" Lines="@(PackageJSONGroup-&gt;Replace('0.0.0', '$(PackageVersion)'))" Overwrite="true" />
    <Exec WorkingDirectory="$(PackageOutputAbsolutePath)npm\" Command="start $(COMSPEC) /k &quot;npm publish &amp; exit&quot;" />
  </Target>

  <ItemGroup>
    <PackageReference Include="GitVersionTask" Version="4.0.0-beta0014">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.TypeScript.MSBuild" Version="3.0.3">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Reinforced.Typings" Version="1.4.95">
      <PrivateAssets>All</PrivateAssets>
    </PackageReference>
    <PackageReference Include="Hjson" Version="3.0.0" />
    <PackageReference Include="Newtonsoft.Json" Version="11.0.2" />
    <PackageReference Include="NLog" Version="4.5.10" />    
  </ItemGroup>

  <ItemGroup>
    <None Update="Helper\package.json">
      <CopyToOutputDirectory>Never</CopyToOutputDirectory>
    </None>
  </ItemGroup>
</Project>
